<?xml version="1.0" encoding="utf-8"?>
<items><story><date>18:27 02 January 2007 (UTC)</date><text>NEW YORK Retired microbiologist Diana 
Westmoreland is no stranger to technology -- except when it 
comes to computers. "The programs are intimidating. The language that's used is 
a foreign one to me," said Westmoreland, who lives near 
Cardiff, Wales. "I'm the sort of person who, when something 
crashes, apologizes to the screen." The problem, says consultant David Platt, lies not with the 
user but with the programmers, who just don't think like the 
people who use their products. Platt is a computer science instructor at the Harvard 
University Extension School and the author of a new book called 
"Why Software Sucks ... And What You Can Do About It," 
published by Pearson Plc (PSON.L) unit Pearson Education. One of his peeves is when a text-editing program like 
Microsoft Word asks users if they want to save their work 
before they close their document. That question makes little sense to computer novices 
accustomed to working with typewriters or pen and paper, he 
said. For them, a clearer question would be: "Throw away 
everything you've just done?" Boxes that ask users to confirm whether they want to take a 
step such as deleting a document are another example of what he 
calls a bad feature. "Your car does not ask, 'Do you really want to start the 
engine?' when you turn the key," Platt said. The confirmation box has become so overused that no one 
pays any attention to it, even when it's warning about a 
document that should be kept, he said. Error messages represent software communication at its 
worst, Platt said. In his book, he recounts how after trying to 
save a Web page from his Internet browser, he received a 
message that said it couldn't be done and gave him no other 
recourse but to hit the OK button. "No, it is not OK with me that this operation didn't work 
and the program can't explain why," he wrote.
 YOUR.USER.IS.NOT.YOU. Platt, who has also written nine books for computer 
professionals, has a message for software developers: "Your. 
User. Is. Not. You." People who write software programs value control. The user, 
on the other hand, just wants something that's easy to operate. To illustrate his point, he notes that computer programmers 
tend to prefer manual transmissions. But not even 15 percent of 
the cars sold in the United States last year had that feature. Similarly, many software programs come with functions -- 
like the ability to move the menu bar -- that the average 
person does not want or need. Programming instructions required 
for such features, Platt said, "increase the possibility of 
crashing errors and security vulnerabilities in the same way as 
more moving parts on any mechanical device render it less 
reliable." David Thomas, executive director of the Software &amp; 
Information Industry Association's software division, disputed 
Platt's assessment of computer programmers. According to Thomas, the trouble with software programs is 
that good ones often get overloaded with features demanded by 
"power users," such as big corporations or vocal individuals. "You don't want your customers to design your product," he 
said. "They're really bad at it." As more and more software becomes Internet-based, he said, 
companies can more easily monitor their users' experiences and 
improve their programs with frequent updates. They have a financial incentive to do so, since more 
consumer traffic results in higher subscription or advertising 
revenues. "They know that if they don't make the customer experience 
enjoyable that the customer will stop using them," he said, 
"whereas if I sell you a (software) product, I don't care if 
you use it or not; I have your money." There is one area, however, where Thomas and Platt agree: 
the Web still has a long way to go. Too many Web sites start off with home pages that offer 
animation, music -- and no real information. "Every time I want to look at an article and I have to 
click to get past that multimedia thing, it drives me crazy," 
Thomas said. "They should be monitoring the fact that 99 
percent of people try click on 'close' within a certain 
fraction of a second to get away from that thing." Web search company Google Inc. (GOOG.O) and photocopy chain 
Fedex Kinko's, a unit of Fedex Corp. (FDX.N), provide 
easy-to-use Web sites, but others are still more complicated 
than they need to be, Platt said. Starbucks Corp. (SBUX.O) incurred his wrath because the 
coffee shop chain required him to specify a search radius when 
he was trying to use its site find the nearest store. "The Starbucks programmers probably think that having more 
control over the search is powerful and cool," he wrote. "But 
in reality it's a useless and annoying distraction. Nobody goes 
around asking, 'Is there a Starbucks within five miles? How 
about 10? 15?"' Platt said he voiced his sentiments to Starbucks, but 
received only an automated response. The company did not 
comment for this article. While companies may not always reply, Platt urges his 
readers to let them know about software problems by posting 
feedback on their Web sites. "The best companies want to hear 
from users," he said. He also advises consumers to check out what trustworthy 
software reviewers have to say about a product before they buy 
it and to post their own comments on Web sites that sell the 
programs. However, individuals can only do so much, and he is working 
on forming an organization called "It Just Works" 
(suckbusters.com) to laud the good programs and ridicule 
the bad. While Platt believes market forces are moving the software 
industry in the right direction, he already is thinking about 
writing a sequel called "Why Software Still Sucks." "I'd be astounded," he said in an e-mail, "if (the 
industry) made so much progress in the next year or two that it 
might not benefit from another nudge."</text><link>http://www.reuters.com/article/2007/01/02/businesspro-software-platt-dc-idUSN2227096620070102</link><sectors><value><value>Tech</value></value></sectors><title>programmers to blame for hard - to - use software</title></story></items>